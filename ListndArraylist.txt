List is an Interface (Super type of ArrayList, LinkedList). when you sat List l = new ArrayList(); you are creating a subclass object with super class reference, thus you can access the methods of only super class but in case of overridden methods the subclasses method would be invoked.

In your case:

List l = new ArrayList()
you will only be able to invoke methods and fields declared inside list interface.

ArrayList al = new ArrayList()
you will be able to invoke methods and fields from both the list and the arraylist.

also when you create an arraylist using approach 1

List l = new ArrayList();
later you can use the same reference to create a LinkedList like

l = new LinkedList();
which you cant using approach 2:

ArrayList al = new ArrayList()

al = new LinkedList()// cannot do this